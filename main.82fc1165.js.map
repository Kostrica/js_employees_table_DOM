{"version":3,"sources":["scripts/main.js"],"names":["indicator","table","document","querySelector","thead","tHead","tbody","tBodies","counter","getSortRows","colNum","colName","rowsArray","choice","rows","slice","parseSalary","cell","split","join","rowA","rowB","cells","innerHTML","isNaN","localeCompare","sort","append","addEventListener","e","targetHeaderCell","target","closest","cellIndex","targetRow","classList","remove","add","form","createElement","createForm","className","map","office","elements","insertAdjacentHTML","body","addErrorChecking","employeeName","employeePosition","employeeOffice","employeeAge","employeeSalary","notification","title","length","addNewEmployeeToTable","setTimeout","preventDefault","name","value","position","age","Intl","NumberFormat","format","salary","activeCell","cellValue","input","focus","newCellValue","keystroke","key"],"mappings":";AAAA,aA2MA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzMA,IAGIA,EAHEC,EAAQC,SAASC,cAAc,SAC/BC,EAAQH,EAAMI,MACdC,EAAQL,EAAMM,QAAQ,GAExBC,EAAU,EAmBd,SAASC,EAAYC,EAAQC,GACrBC,IACFC,EADED,EAAY,EAAIN,EAAMQ,MAAMC,MAAM,GAGhCJ,OAAAA,GACD,IAAA,SACGK,IAAAA,EAAc,SAAAC,GAClB,OAACA,EACEF,MAAM,GACNG,MAAM,KACNC,KAAK,KAGRN,EADEL,EAAU,GAAM,EACT,SAACY,EAAMC,GACdL,OAAAA,EAAYI,EAAKE,MAAMZ,GAAQa,WAC3BP,EAAYK,EAAKC,MAAMZ,GAAQa,YAE5B,SAACH,EAAMC,GACdL,OAAAA,EAAYK,EAAKC,MAAMZ,GAAQa,WAC3BP,EAAYI,EAAKE,MAAMZ,GAAQa,YAEvC,MACF,QAEIV,EADEL,EAAU,GAAM,EACT,SAACY,EAAMC,GACdG,OAAAA,MAAMJ,EAAKE,MAAMZ,GAAQa,WACpBH,EAAKE,MAAMZ,GAAQa,UACnBE,cAAcJ,EAAKC,MAAMZ,GAAQa,YACjCH,EAAKE,MAAMZ,GAAQa,WACjBF,EAAKC,MAAMZ,GAAQa,WAEnB,SAACH,EAAMC,GACdG,OAAAA,MAAMJ,EAAKE,MAAMZ,GAAQa,WACpBF,EAAKC,MAAMZ,GAAQa,UACnBE,cAAcL,EAAKE,MAAMZ,GAAQa,YACjCF,EAAKC,MAAMZ,GAAQa,WACjBH,EAAKE,MAAMZ,GAAQa,WAKlCX,EAAUc,KAAKb,GAEfP,EAAMqB,OAANrB,MAAAA,EAAgBM,EAAAA,IA3DlBR,EAAMwB,iBAAiB,QAAS,SAAAC,GACxBC,IAAAA,EAAmBD,EAAEE,OAAOC,QAAQ,MACpCC,EAAYH,EAAiBG,UAE/BjC,IAAciC,EAChBzB,IAEAA,EAAU,EAGZR,EAAYiC,EAEZxB,EAAYwB,EAAWH,EAAiBP,aAmD1CjB,EAAMsB,iBAAiB,QAAS,SAAAC,GACxBK,IAD6B,EAC7BA,EAAYL,EAAEE,OAAOC,QAAQ,MAEjB1B,EAAAA,EAAAA,EAAMQ,MAHW,IAGL,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MACxBqB,UAAUC,OAAO,WAJY,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAOnCF,EAAUC,UAAUE,IAAI,YAI1B,IAAMC,EAAOpC,SAASqC,cAAc,QAEpC,SAASC,IACPF,EAAKG,UAAY,oBAEjBH,EAAKf,UAAL,qlBAwBgB,CACd,QACA,YACA,SACA,eACA,YACA,qBAGMmB,IAAI,SAAAC,GACVL,EAAKM,SAASD,OAAOE,mBAAmB,YACtBF,yBAAAA,OAAAA,EAAUA,KAAAA,OAAAA,EAD5B,sBAKFzC,SAAS4C,KAAKnB,OAAOW,GAwBvB,SAASS,EAAiBC,EACxBC,EACAC,EACAC,EACAC,GACAd,EAAKO,mBAAmB,WAAxB,4HAOMQ,IAAAA,EAAenD,SAASC,cAAc,iBACtCmD,EAAQD,EAAalD,cAAc,UAErC6C,EAAaO,OAAS,EACxBD,EAAM/B,UAAY,sDACT4B,EAAc,IAAMA,EAAc,GAC3CG,EAAM/B,UAAY,8CAElB8B,EAAalB,UAAUC,OAAO,SAC9BiB,EAAalB,UAAUE,IAAI,WAC3BiB,EAAM/B,UAAY,uDAElBiC,EAAsBR,EACpBC,EACAC,EACAC,EACAC,IAGJK,WAAW,WAAMJ,OAAAA,EAAajB,UAAU,KAI1C,SAASoB,EAAsBR,EAC7BC,EACAC,EACAC,EACAC,GACA9C,EAAMuC,mBAAmB,YAEfG,yBAAAA,OAAAA,EACAC,qBAAAA,OAAAA,EACAC,qBAAAA,OAAAA,EACAC,qBAAAA,OAAAA,EACCC,sBAAAA,OAAAA,EANX,yBA7DFZ,IAGAF,EAAKV,iBAAiB,SAAU,SAAAC,GAC9BA,EAAE6B,iBASFX,EAPqBT,EAAKM,SAASe,KAAKC,MACftB,EAAKM,SAASiB,SAASD,MACzBtB,EAAKM,SAASD,OAAOiB,MACxBtB,EAAKM,SAASkB,IAAIF,MACf,IAAIG,KAAKC,aAAa,SAC1CC,OAAO3B,EAAKM,SAASsB,OAAON,UA8DjCtD,EAAMsB,iBAAiB,WAAY,SAAAC,GAC3BsC,IAAAA,EAAatC,EAAEE,OAAOC,QAAQ,MAC9BoC,EAAYD,EAAW5C,UAE7B4C,EAAW5C,UAAY,GAEvB4C,EAAWtB,mBAAmB,YACOuB,0CAAAA,OAAAA,EADrC,WAIMC,IAAAA,EAAQF,EAAWhE,cAAc,SAEvCkE,EAAMC,QAEAC,IAAAA,EAAe,WACC,KAAhBF,EAAMT,MACRO,EAAW5C,UAAY6C,EAEvBD,EAAW5C,UAAY8C,EAAMT,OAIjCS,EAAMzC,iBAAiB,WAAY2C,GAEnCF,EAAMzC,iBAAiB,UAAW,SAAA4C,GACV,UAAlBA,EAAUC,KACZF","file":"main.82fc1165.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst table = document.querySelector('table');\r\nconst thead = table.tHead;\r\nconst tbody = table.tBodies[0];\r\nlet indicator;\r\nlet counter = 1;\r\n\r\n// click on the table header to sort\r\nthead.addEventListener('click', e => {\r\n  const targetHeaderCell = e.target.closest('th');\r\n  const cellIndex = targetHeaderCell.cellIndex;\r\n\r\n  if (indicator === cellIndex) {\r\n    counter++;\r\n  } else {\r\n    counter = 1;\r\n  }\r\n\r\n  indicator = cellIndex;\r\n\r\n  getSortRows(cellIndex, targetHeaderCell.innerHTML);\r\n});\r\n\r\n// sort table rows\r\nfunction getSortRows(colNum, colName) {\r\n  const rowsArray = [...tbody.rows].slice(0);\r\n  let choice;\r\n\r\n  switch (colName) {\r\n    case 'Salary':\r\n      const parseSalary = cell =>\r\n        +cell\r\n          .slice(1)\r\n          .split(',')\r\n          .join('');\r\n\r\n      if (counter % 2 !== 0) {\r\n        choice = (rowA, rowB) =>\r\n          parseSalary(rowA.cells[colNum].innerHTML)\r\n            - parseSalary(rowB.cells[colNum].innerHTML);\r\n      } else {\r\n        choice = (rowA, rowB) =>\r\n          parseSalary(rowB.cells[colNum].innerHTML)\r\n            - parseSalary(rowA.cells[colNum].innerHTML);\r\n      }\r\n      break;\r\n    default:\r\n      if (counter % 2 !== 0) {\r\n        choice = (rowA, rowB) =>\r\n          isNaN(rowA.cells[colNum].innerHTML)\r\n            ? (rowA.cells[colNum].innerHTML)\r\n              .localeCompare(rowB.cells[colNum].innerHTML)\r\n            : +rowA.cells[colNum].innerHTML\r\n              - +rowB.cells[colNum].innerHTML;\r\n      } else {\r\n        choice = (rowA, rowB) =>\r\n          isNaN(rowA.cells[colNum].innerHTML)\r\n            ? (rowB.cells[colNum].innerHTML)\r\n              .localeCompare(rowA.cells[colNum].innerHTML)\r\n            : +rowB.cells[colNum].innerHTML\r\n              - +rowA.cells[colNum].innerHTML;\r\n      }\r\n      break;\r\n  }\r\n\r\n  rowsArray.sort(choice);\r\n\r\n  tbody.append(...rowsArray);\r\n}\r\n\r\n// click on a table row to select\r\ntbody.addEventListener('click', e => {\r\n  const targetRow = e.target.closest('tr');\r\n\r\n  for (const row of tbody.rows) {\r\n    row.classList.remove('active');\r\n  }\r\n\r\n  targetRow.classList.add('active');\r\n});\r\n\r\n// add Form\r\nconst form = document.createElement('form');\r\n\r\nfunction createForm() {\r\n  form.className = 'new-employee-form';\r\n\r\n  form.innerHTML = `\r\n    <label>\r\n      Name: \r\n        <input name=\"name\" data-qa=\"name\" type=\"text\" required>\r\n    </label>\r\n    <label>\r\n      Position:\r\n        <input name=\"position\" data-qa=\"position\" type=\"text\" required>\r\n    </label>\r\n    <label>\r\n      Office:\r\n        <select name=\"office\" data-qa=\"office\"></select>\r\n    </label>\r\n    <label>\r\n      Age:\r\n        <input name=\"age\" data-qa=\"age\" type=\"number\" required>\r\n    </label>\r\n    <label>\r\n      Salary:\r\n        <input name=\"salary\" data-qa=\"salary\" type=\"number\" required>\r\n    </label>\r\n    <button type=\"submit\">Save to table</button>\r\n  `;\r\n\r\n  const offices = [\r\n    'Tokyo',\r\n    'Singapore',\r\n    'London',\r\n    'New&nbspYork',\r\n    'Edinburgh',\r\n    'San&nbspFrancisco',\r\n  ];\r\n\r\n  offices.map(office => {\r\n    form.elements.office.insertAdjacentHTML('beforeend', `\r\n      <option value=${office}>${office}</option>\r\n    `);\r\n  });\r\n\r\n  document.body.append(form);\r\n};\r\n\r\ncreateForm();\r\n\r\n// click on the \"Save to table\" button to add a new employee to the table\r\nform.addEventListener('submit', e => {\r\n  e.preventDefault();\r\n\r\n  const employeeName = form.elements.name.value;\r\n  const employeePosition = form.elements.position.value;\r\n  const employeeOffice = form.elements.office.value;\r\n  const employeeAge = form.elements.age.value;\r\n  const employeeSalary = new Intl.NumberFormat('en-GB')\r\n    .format(form.elements.salary.value);\r\n\r\n  addErrorChecking(employeeName,\r\n    employeePosition,\r\n    employeeOffice,\r\n    employeeAge,\r\n    employeeSalary);\r\n});\r\n\r\n// check the entered data in the form\r\nfunction addErrorChecking(employeeName,\r\n  employeePosition,\r\n  employeeOffice,\r\n  employeeAge,\r\n  employeeSalary) {\r\n  form.insertAdjacentHTML('afterend', `\r\n    <div class=\"notification error\" data-qa=\"notification\">\r\n      <span class=\"title\">\r\n      </span>\r\n    </div>\r\n  `);\r\n\r\n  const notification = document.querySelector('.notification');\r\n  const title = notification.querySelector('.title');\r\n\r\n  if (employeeName.length < 4) {\r\n    title.innerHTML = 'Error! The \"Name\" field has less than 4 characters.';\r\n  } else if (employeeAge < 18 || employeeAge > 90) {\r\n    title.innerHTML = 'Error! Age does not meet the requirements.';\r\n  } else {\r\n    notification.classList.remove('error');\r\n    notification.classList.add('success');\r\n    title.innerHTML = 'Success! A new employee has been added to the table.';\r\n\r\n    addNewEmployeeToTable(employeeName,\r\n      employeePosition,\r\n      employeeOffice,\r\n      employeeAge,\r\n      employeeSalary);\r\n  }\r\n\r\n  setTimeout(() => notification.remove(), 3000);\r\n}\r\n\r\n// add a new employee to the table\r\nfunction addNewEmployeeToTable(employeeName,\r\n  employeePosition,\r\n  employeeOffice,\r\n  employeeAge,\r\n  employeeSalary) {\r\n  tbody.insertAdjacentHTML('beforeend', `\r\n    <tr>\r\n      <td>${employeeName}</td>\r\n      <td>${employeePosition}</td>\r\n      <td>${employeeOffice}</td>\r\n      <td>${employeeAge}</td>\r\n      <td>$${employeeSalary}</td>\r\n    </tr>\r\n  `);\r\n}\r\n\r\n// change cell data\r\ntbody.addEventListener('dblclick', e => {\r\n  const activeCell = e.target.closest('td');\r\n  const cellValue = activeCell.innerHTML;\r\n\r\n  activeCell.innerHTML = '';\r\n\r\n  activeCell.insertAdjacentHTML('beforeend', `\r\n    <input class=\"cell-input\" value=\"${cellValue}\">\r\n  `);\r\n\r\n  const input = activeCell.querySelector('input');\r\n\r\n  input.focus();\r\n\r\n  const newCellValue = () => {\r\n    if (input.value === '') {\r\n      activeCell.innerHTML = cellValue;\r\n    } else {\r\n      activeCell.innerHTML = input.value;\r\n    }\r\n  };\r\n\r\n  input.addEventListener('focusout', newCellValue);\r\n\r\n  input.addEventListener('keydown', keystroke => {\r\n    if (keystroke.key === 'Enter') {\r\n      newCellValue();\r\n    }\r\n  });\r\n});\r\n"]}